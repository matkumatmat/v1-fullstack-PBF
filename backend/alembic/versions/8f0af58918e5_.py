"""empty message

Revision ID: 8f0af58918e5
Revises: e7f83fe5a3c3
Create Date: 2025-10-06 01:45:32.309692

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8f0af58918e5'
down_revision: Union[str, Sequence[str], None] = 'e7f83fe5a3c3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_customer_types_id'), table_name='customer_types')
    op.drop_index(op.f('ix_customer_types_public_id'), table_name='customer_types')
    op.drop_table('customer_types')
    op.drop_index(op.f('ix_sector_types_id'), table_name='sector_types')
    op.drop_index(op.f('ix_sector_types_public_id'), table_name='sector_types')
    op.drop_table('sector_types')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sector_types',
    sa.Column('sector_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('default_payment_terms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('default_delivery_terms', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('sector_types_pkey')),
    sa.UniqueConstraint('sector_type', name=op.f('sector_types_sector_type_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_sector_types_public_id'), 'sector_types', ['public_id'], unique=True)
    op.create_index(op.f('ix_sector_types_id'), 'sector_types', ['id'], unique=False)
    op.create_table('customer_types',
    sa.Column('customer_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('default_credit_limit', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('default_payment_terms_days', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('customer_types_pkey')),
    sa.UniqueConstraint('customer_type', name=op.f('customer_types_customer_type_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_customer_types_public_id'), 'customer_types', ['public_id'], unique=True)
    op.create_index(op.f('ix_customer_types_id'), 'customer_types', ['id'], unique=False)
    # ### end Alembic commands ###
